<?php
namespace Phossa\Cache\Extension;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-20 at 08:29:11.
 */
class BypassExtensionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var BypassExtension
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new BypassExtension([
            'trigger' => ''
        ]);

        // cache
        $this->cache  = new \Phossa\Cache\CachePool();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Phossa\Cache\Extension\BypassExtension::stagesHandling
     */
    public function testStagesHandling()
    {
        $this->assertArrayHasKey(
            ExtensionStage::STAGE_ALL,
            $this->object->stagesHandling()
        );
    }

    /**
     * @covers Phossa\Cache\Extension\BypassExtension::__invoke
     */
    public function testInvoke()
    {
        // default bypass all
        $ext1  = $this->object;
        $this->assertFalse($ext1($this->cache, ExtensionStage::STAGE_PRE_HAS));

        // new trigger
        $ext2   = new BypassExtension([
            'trigger' => 'nocache'
        ]);
        unset($_REQUEST['nocache']);
        $this->assertTrue($ext2($this->cache, ExtensionStage::STAGE_PRE_HAS));

        // add trigger in URL
        $_REQUEST['nocache'] = 1;
        $this->assertFalse($ext2($this->cache, ExtensionStage::STAGE_PRE_HAS));
    }
}
